{"ast":null,"code":"var _jsxFileName = \"/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/VitalsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { Typography, Button, List, ListItem, ListItemText, Paper, TextField, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Grid, Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@mui/icons-material/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@mui/icons-material/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAlt';\nimport SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moodIcons = [{\n  icon: /*#__PURE__*/_jsxDEV(SentimentVeryDissatisfiedIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }, this),\n  label: 'Very Bad'\n}, {\n  icon: /*#__PURE__*/_jsxDEV(SentimentDissatisfiedIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this),\n  label: 'Bad'\n}, {\n  icon: /*#__PURE__*/_jsxDEV(SentimentSatisfiedIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }, this),\n  label: 'Okay'\n}, {\n  icon: /*#__PURE__*/_jsxDEV(SentimentSatisfiedAltIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }, this),\n  label: 'Good'\n}, {\n  icon: /*#__PURE__*/_jsxDEV(SentimentVerySatisfiedIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 11\n  }, this),\n  label: 'Very Good'\n}];\nconst MoodTracker = ({\n  onMoodSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2,\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"How are you feeling today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      children: moodIcons.map((mood, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => onMoodSelect(index),\n          size: \"large\",\n          color: \"primary\",\n          children: mood.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: mood.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = MoodTracker;\nconst VitalsScreen = () => {\n  _s();\n  const [vitals, setVitals] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [newVital, setNewVital] = useState({\n    type: '',\n    value: ''\n  });\n  const [chartData, setChartData] = useState([]);\n  const [error, setError] = useState('');\n  const prepareChartData = useCallback(() => {\n    const data = vitals.map(vital => ({\n      date: new Date(vital.date).toLocaleDateString(),\n      [vital.type]: parseFloat(vital.value)\n    }));\n    setChartData(data);\n  }, [vitals]);\n  useEffect(() => {\n    fetchVitals();\n  }, []);\n  useEffect(() => {\n    prepareChartData();\n  }, [vitals, prepareChartData]);\n  const fetchVitals = async () => {\n    try {\n      const response = await api.getVitals();\n      setVitals(response.data);\n    } catch (error) {\n      console.error('Error fetching vitals:', error);\n    }\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = e => {\n    setNewVital({\n      ...newVital,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async () => {\n    if (!newVital.type || !newVital.value) {\n      setError('Please fill in both fields');\n      return;\n    }\n    if (isNaN(parseFloat(newVital.value))) {\n      setError('Value must be a number');\n      return;\n    }\n    try {\n      console.log('Submitting vital:', newVital);\n      const response = await api.addVital(newVital);\n      console.log('Vital added:', response.data);\n      setOpen(false);\n      setError('');\n      fetchVitals();\n    } catch (error) {\n      console.error('Error adding vital:', error.response ? error.response.data : error.message);\n      setError('Failed to add vital. Please try again.');\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.deleteVital(id);\n      fetchVitals();\n    } catch (error) {\n      console.error('Error deleting vital:', error);\n    }\n  };\n  const handleMoodSelect = async moodIndex => {\n    try {\n      const newVital = {\n        type: 'Mood',\n        value: moodIndex.toString()\n      };\n      await api.addVital(newVital);\n      fetchVitals();\n    } catch (error) {\n      console.error('Error adding mood:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Vitals Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(MoodTracker, {\n          onMoodSelect: handleMoodSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            height: '400px'\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Vitals Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), chartData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: chartData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                verticalAlign: \"top\",\n                height: 36\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), \" \", Object.keys(chartData[0]).filter(key => key !== 'date').map((key, index) => /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: key,\n                stroke: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n                name: key // This ensures the full name is used in the legend\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No vitals data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            height: '300px',\n            overflow: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Vitals History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleClickOpen,\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 80\n              }, this),\n              children: \"Add Vital\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), vitals.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n            children: vitals.map(vital => /*#__PURE__*/_jsxDEV(ListItem, {\n              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                onClick: () => handleDelete(vital.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${vital.type}: ${vital.value}`,\n                secondary: new Date(vital.date).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)\n            }, vital.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No vitals recorded yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Vital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          name: \"type\",\n          label: \"Vital Type\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          name: \"value\",\n          label: \"Value\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(VitalsScreen, \"Sk/yqbQSb5P034gz4g+XiNeBZD8=\");\n_c2 = VitalsScreen;\nexport default VitalsScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"MoodTracker\");\n$RefreshReg$(_c2, \"VitalsScreen\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","Typography","Button","List","ListItem","ListItemText","Paper","TextField","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Grid","Box","DeleteIcon","AddIcon","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","SentimentVeryDissatisfiedIcon","SentimentDissatisfiedIcon","SentimentSatisfiedIcon","SentimentSatisfiedAltIcon","SentimentVerySatisfiedIcon","jsxDEV","_jsxDEV","moodIcons","icon","fileName","_jsxFileName","lineNumber","columnNumber","label","MoodTracker","onMoodSelect","elevation","sx","p","mb","children","variant","gutterBottom","container","spacing","justifyContent","map","mood","index","item","onClick","size","color","_c","VitalsScreen","_s","vitals","setVitals","open","setOpen","newVital","setNewVital","type","value","chartData","setChartData","error","setError","prepareChartData","data","vital","date","Date","toLocaleDateString","parseFloat","fetchVitals","response","getVitals","console","handleClickOpen","handleClose","handleChange","e","target","name","handleSubmit","isNaN","log","addVital","message","handleDelete","id","deleteVital","handleMoodSelect","moodIndex","toString","flexGrow","xs","height","length","width","strokeDasharray","dataKey","verticalAlign","Object","keys","filter","key","stroke","Math","floor","random","overflow","display","alignItems","startIcon","secondaryAction","edge","primary","secondary","toLocaleString","onClose","autoFocus","margin","fullWidth","onChange","_c2","$RefreshReg$"],"sources":["/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/VitalsScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { Typography, Button, List, ListItem, ListItemText, Paper, TextField, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Grid, Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@mui/icons-material/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@mui/icons-material/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@mui/icons-material/SentimentSatisfiedAlt';\nimport SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';\n\nconst moodIcons = [\n  { icon: <SentimentVeryDissatisfiedIcon />, label: 'Very Bad' },\n  { icon: <SentimentDissatisfiedIcon />, label: 'Bad' },\n  { icon: <SentimentSatisfiedIcon />, label: 'Okay' },\n  { icon: <SentimentSatisfiedAltIcon />, label: 'Good' },\n  { icon: <SentimentVerySatisfiedIcon />, label: 'Very Good' },\n];\n\nconst MoodTracker = ({ onMoodSelect }) => {\n  return (\n    <Paper elevation={3} sx={{ p: 2, mb: 2 }}>\n      <Typography variant=\"h6\" gutterBottom>How are you feeling today?</Typography>\n      <Grid container spacing={2} justifyContent=\"center\">\n        {moodIcons.map((mood, index) => (\n          <Grid item key={index}>\n            <IconButton onClick={() => onMoodSelect(index)} size=\"large\" color=\"primary\">\n              {mood.icon}\n            </IconButton>\n            <Typography variant=\"caption\">{mood.label}</Typography>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nconst VitalsScreen = () => {\n  const [vitals, setVitals] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [newVital, setNewVital] = useState({ type: '', value: '' });\n  const [chartData, setChartData] = useState([]);\n  const [error, setError] = useState('');\n\n  const prepareChartData = useCallback(() => {\n    const data = vitals.map(vital => ({\n      date: new Date(vital.date).toLocaleDateString(),\n      [vital.type]: parseFloat(vital.value)\n    }));\n    setChartData(data);\n  }, [vitals]);\n\n  useEffect(() => {\n    fetchVitals();\n  }, []);\n\n  useEffect(() => {\n    prepareChartData();\n  }, [vitals, prepareChartData]);\n\n  const fetchVitals = async () => {\n    try {\n      const response = await api.getVitals();\n      setVitals(response.data);\n    } catch (error) {\n      console.error('Error fetching vitals:', error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setNewVital({ ...newVital, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async () => {\n    if (!newVital.type || !newVital.value) {\n      setError('Please fill in both fields');\n      return;\n    }\n    if (isNaN(parseFloat(newVital.value))) {\n      setError('Value must be a number');\n      return;\n    }\n    try {\n      console.log('Submitting vital:', newVital);\n      const response = await api.addVital(newVital);\n      console.log('Vital added:', response.data);\n      setOpen(false);\n      setError('');\n      fetchVitals();\n    } catch (error) {\n      console.error('Error adding vital:', error.response ? error.response.data : error.message);\n      setError('Failed to add vital. Please try again.');\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await api.deleteVital(id);\n      fetchVitals();\n    } catch (error) {\n      console.error('Error deleting vital:', error);\n    }\n  };\n\n  const handleMoodSelect = async (moodIndex) => {\n    try {\n      const newVital = { type: 'Mood', value: moodIndex.toString() };\n      await api.addVital(newVital);\n      fetchVitals();\n    } catch (error) {\n      console.error('Error adding mood:', error);\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Vitals Tracking\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <MoodTracker onMoodSelect={handleMoodSelect} />\n        </Grid>\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 3, height: '400px' }}> {/* Increased height for better visibility */}\n            <Typography variant=\"h6\" gutterBottom>Vitals Chart</Typography>\n            {chartData.length > 0 ? (\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend verticalAlign=\"top\" height={36} /> {/* Moved legend to top */}\n                  {Object.keys(chartData[0]).filter(key => key !== 'date').map((key, index) => (\n                    <Line \n                      key={index} \n                      type=\"monotone\" \n                      dataKey={key} \n                      stroke={`#${Math.floor(Math.random()*16777215).toString(16)}`}\n                      name={key} // This ensures the full name is used in the legend\n                    />\n                  ))}\n                </LineChart>\n              </ResponsiveContainer>\n            ) : (\n              <Typography>No vitals data available</Typography>\n            )}\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 3, height: '300px', overflow: 'auto' }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Vitals History</Typography>\n              <Button variant=\"contained\" onClick={handleClickOpen} startIcon={<AddIcon />}>\n                Add Vital\n              </Button>\n            </Box>\n            {vitals.length > 0 ? (\n              <List>\n                {vitals.map((vital) => (\n                  <ListItem key={vital.id} secondaryAction={\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete(vital.id)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  }>\n                    <ListItemText\n                      primary={`${vital.type}: ${vital.value}`}\n                      secondary={new Date(vital.date).toLocaleString()}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <Typography>No vitals recorded yet.</Typography>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Add New Vital</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            name=\"type\"\n            label=\"Vital Type\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"dense\"\n            name=\"value\"\n            label=\"Value\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n          {error && <Typography color=\"error\">{error}</Typography>}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\">Add</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default VitalsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}