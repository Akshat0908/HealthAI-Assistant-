{"ast":null,"code":"var _jsxFileName = \"/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/ChatScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography, TextField, Button, Paper, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatScreen = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  useEffect(() => {\n    setMessages([{\n      id: 0,\n      text: \"Hello! I'm your HealthAI Assistant. How can I help you today?\",\n      user: false\n    }]);\n  }, []);\n  const sendMessage = async () => {\n    if (inputText.trim() === '') return;\n    const userMessage = {\n      id: messages.length,\n      text: inputText,\n      user: true\n    };\n    setMessages([...messages, userMessage]);\n    setInputText('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message: inputText\n      });\n      const aiResponse = {\n        id: messages.length + 1,\n        text: response.data.response,\n        user: false\n      };\n      setMessages(prevMessages => [...prevMessages, aiResponse]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      let errorMessage = 'An error occurred while sending the message.';\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        errorMessage = `Server error: ${error.response.status} ${error.response.statusText}`;\n      } else if (error.request) {\n        // The request was made but no response was received\n        errorMessage = 'No response received from the server. Please check if the backend is running.';\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        errorMessage = error.message;\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        id: messages.length + 1,\n        text: errorMessage,\n        user: false\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Chat with HealthAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        height: '60vh',\n        overflowY: 'auto',\n        p: 2,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            justifyContent: message.user ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            sx: {\n              p: 1,\n              bgcolor: message.user ? 'primary.light' : 'grey.200'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      placeholder: \"Type your message...\",\n      onKeyPress: e => e.key === 'Enter' && sendMessage(),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatScreen, \"B3eY6J4WkWzPa7yDx3XDfi3BNK0=\");\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","Typography","TextField","Button","Paper","List","ListItem","ListItemText","jsxDEV","_jsxDEV","ChatScreen","_s","messages","setMessages","inputText","setInputText","id","text","user","sendMessage","trim","userMessage","length","response","post","message","aiResponse","data","prevMessages","error","console","errorMessage","status","statusText","request","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","sx","height","overflowY","p","mb","map","justifyContent","bgcolor","primary","fullWidth","value","onChange","e","target","placeholder","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography, TextField, Button, Paper, List, ListItem, ListItemText } from '@mui/material';\n\nconst ChatScreen = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n\n  useEffect(() => {\n    setMessages([{ id: 0, text: \"Hello! I'm your HealthAI Assistant. How can I help you today?\", user: false }]);\n  }, []);\n\n  const sendMessage = async () => {\n    if (inputText.trim() === '') return;\n\n    const userMessage = { id: messages.length, text: inputText, user: true };\n    setMessages([...messages, userMessage]);\n    setInputText('');\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', { message: inputText });\n      const aiResponse = { id: messages.length + 1, text: response.data.response, user: false };\n      setMessages(prevMessages => [...prevMessages, aiResponse]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      let errorMessage = 'An error occurred while sending the message.';\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        errorMessage = `Server error: ${error.response.status} ${error.response.statusText}`;\n      } else if (error.request) {\n        // The request was made but no response was received\n        errorMessage = 'No response received from the server. Please check if the backend is running.';\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        errorMessage = error.message;\n      }\n      setMessages(prevMessages => [...prevMessages, { id: messages.length + 1, text: errorMessage, user: false }]);\n    }\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" gutterBottom>\n        Chat with HealthAI\n      </Typography>\n      <Paper elevation={3} sx={{ height: '60vh', overflowY: 'auto', p: 2, mb: 2 }}>\n        <List>\n          {messages.map((message) => (\n            <ListItem key={message.id} sx={{ justifyContent: message.user ? 'flex-end' : 'flex-start' }}>\n              <Paper elevation={1} sx={{ p: 1, bgcolor: message.user ? 'primary.light' : 'grey.200' }}>\n                <ListItemText primary={message.text} />\n              </Paper>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n      <TextField\n        fullWidth\n        variant=\"outlined\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n        placeholder=\"Type your message...\"\n        onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n        sx={{ mb: 2 }}\n      />\n      <Button variant=\"contained\" onClick={sendMessage}>Send</Button>\n    </div>\n  );\n};\n\nexport default ChatScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}