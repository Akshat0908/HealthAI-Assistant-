{"ast":null,"code":"import axios from 'axios';\nimport { ENDPOINTS } from '../config/api';\nconst api = {\n  sendChatMessage: message => axios.post(ENDPOINTS.CHAT, {\n    messages: [{\n      role: \"user\",\n      content: message\n    }],\n    model: \"Phi-3-mini-4k-instruct\"\n  }),\n  getAppointments: () => {\n    const appointments = JSON.parse(localStorage.getItem('appointments') || '[]');\n    return Promise.resolve({\n      data: appointments\n    });\n  },\n  createAppointment: appointmentData => {\n    const appointments = JSON.parse(localStorage.getItem('appointments') || '[]');\n    const newAppointment = {\n      ...appointmentData,\n      id: Date.now()\n    };\n    appointments.push(newAppointment);\n    localStorage.setItem('appointments', JSON.stringify(appointments));\n    return Promise.resolve({\n      data: newAppointment\n    });\n  },\n  getVitals: () => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    return Promise.resolve({\n      data: vitals\n    });\n  },\n  addVital: vitalData => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    const newVital = {\n      ...vitalData,\n      id: Date.now(),\n      date: new Date().toISOString()\n    };\n    vitals.push(newVital);\n    localStorage.setItem('vitals', JSON.stringify(vitals));\n    return Promise.resolve({\n      data: newVital\n    });\n  },\n  deleteVital: id => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    const updatedVitals = vitals.filter(vital => vital.id !== id);\n    localStorage.setItem('vitals', JSON.stringify(updatedVitals));\n    return Promise.resolve({\n      data: id\n    });\n  },\n  getHealthTips: () => {\n    // For now, we'll return static tips. In a real app, this would be an API call.\n    return Promise.resolve({\n      data: [\"Stay hydrated! Aim for 8 glasses of water a day.\", \"Take a 5-minute break every hour to stretch and move around.\", \"Incorporate colorful fruits and vegetables into your meals for a nutrient boost.\", \"Practice deep breathing exercises to reduce stress and improve focus.\", \"Aim for 7-9 hours of sleep each night for optimal health.\"]\n    });\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","ENDPOINTS","api","sendChatMessage","message","post","CHAT","messages","role","content","model","getAppointments","appointments","JSON","parse","localStorage","getItem","Promise","resolve","data","createAppointment","appointmentData","newAppointment","id","Date","now","push","setItem","stringify","getVitals","vitals","addVital","vitalData","newVital","date","toISOString","deleteVital","updatedVitals","filter","vital","getHealthTips"],"sources":["/Users/akshatagrawal/Desktop/healthcare/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { ENDPOINTS } from '../config/api';\n\nconst api = {\n  sendChatMessage: (message) => axios.post(ENDPOINTS.CHAT, { messages: [{ role: \"user\", content: message }], model: \"Phi-3-mini-4k-instruct\" }),\n  \n  getAppointments: () => {\n    const appointments = JSON.parse(localStorage.getItem('appointments') || '[]');\n    return Promise.resolve({ data: appointments });\n  },\n  \n  createAppointment: (appointmentData) => {\n    const appointments = JSON.parse(localStorage.getItem('appointments') || '[]');\n    const newAppointment = { ...appointmentData, id: Date.now() };\n    appointments.push(newAppointment);\n    localStorage.setItem('appointments', JSON.stringify(appointments));\n    return Promise.resolve({ data: newAppointment });\n  },\n  \n  getVitals: () => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    return Promise.resolve({ data: vitals });\n  },\n  \n  addVital: (vitalData) => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    const newVital = { ...vitalData, id: Date.now(), date: new Date().toISOString() };\n    vitals.push(newVital);\n    localStorage.setItem('vitals', JSON.stringify(vitals));\n    return Promise.resolve({ data: newVital });\n  },\n  \n  deleteVital: (id) => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    const updatedVitals = vitals.filter(vital => vital.id !== id);\n    localStorage.setItem('vitals', JSON.stringify(updatedVitals));\n    return Promise.resolve({ data: id });\n  },\n  \n  getHealthTips: () => {\n    // For now, we'll return static tips. In a real app, this would be an API call.\n    return Promise.resolve({\n      data: [\n        \"Stay hydrated! Aim for 8 glasses of water a day.\",\n        \"Take a 5-minute break every hour to stretch and move around.\",\n        \"Incorporate colorful fruits and vegetables into your meals for a nutrient boost.\",\n        \"Practice deep breathing exercises to reduce stress and improve focus.\",\n        \"Aim for 7-9 hours of sleep each night for optimal health.\",\n      ]\n    });\n  },\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}