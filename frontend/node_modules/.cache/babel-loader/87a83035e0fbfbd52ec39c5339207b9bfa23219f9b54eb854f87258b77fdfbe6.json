{"ast":null,"code":"import axios from 'axios';\nimport { ENDPOINTS } from '../config/api';\nconst generateSampleVitals = () => {\n  const types = ['Blood Pressure', 'Heart Rate', 'Temperature'];\n  const vitals = [];\n  for (let i = 0; i < 10; i++) {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n    types.forEach(type => {\n      vitals.push({\n        id: Date.now() + Math.random(),\n        date: date.toISOString(),\n        type: type,\n        value: Math.floor(Math.random() * 100).toString()\n      });\n    });\n  }\n  return vitals;\n};\nconst api = {\n  sendChatMessage: message => axios.post(ENDPOINTS.CHAT, {\n    messages: [{\n      role: \"user\",\n      content: message\n    }],\n    model: \"Phi-3-mini-4k-instruct\"\n  }),\n  getAppointments: () => {\n    const appointments = JSON.parse(localStorage.getItem('appointments') || '[]');\n    return Promise.resolve({\n      data: appointments\n    });\n  },\n  createAppointment: appointmentData => {\n    const appointments = JSON.parse(localStorage.getItem('appointments') || '[]');\n    const newAppointment = {\n      ...appointmentData,\n      id: Date.now()\n    };\n    appointments.push(newAppointment);\n    localStorage.setItem('appointments', JSON.stringify(appointments));\n    return Promise.resolve({\n      data: newAppointment\n    });\n  },\n  getVitals: () => {\n    let vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    if (vitals.length === 0) {\n      vitals = generateSampleVitals();\n      localStorage.setItem('vitals', JSON.stringify(vitals));\n    }\n    return Promise.resolve({\n      data: vitals\n    });\n  },\n  addVital: vitalData => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    const newVital = {\n      ...vitalData,\n      id: Date.now(),\n      date: new Date().toISOString()\n    };\n    vitals.push(newVital);\n    localStorage.setItem('vitals', JSON.stringify(vitals));\n    return Promise.resolve({\n      data: newVital\n    });\n  },\n  deleteVital: id => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    const updatedVitals = vitals.filter(vital => vital.id !== id);\n    localStorage.setItem('vitals', JSON.stringify(updatedVitals));\n    return Promise.resolve({\n      data: id\n    });\n  },\n  getHealthTips: () => {\n    // For now, we'll return static tips. In a real app, this would be an API call.\n    return Promise.resolve({\n      data: [\"Stay hydrated! Aim for 8 glasses of water a day.\", \"Take a 5-minute break every hour to stretch and move around.\", \"Incorporate colorful fruits and vegetables into your meals for a nutrient boost.\", \"Practice deep breathing exercises to reduce stress and improve focus.\", \"Aim for 7-9 hours of sleep each night for optimal health.\"]\n    });\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","ENDPOINTS","generateSampleVitals","types","vitals","i","date","Date","setDate","getDate","forEach","type","push","id","now","Math","random","toISOString","value","floor","toString","api","sendChatMessage","message","post","CHAT","messages","role","content","model","getAppointments","appointments","JSON","parse","localStorage","getItem","Promise","resolve","data","createAppointment","appointmentData","newAppointment","setItem","stringify","getVitals","length","addVital","vitalData","newVital","deleteVital","updatedVitals","filter","vital","getHealthTips"],"sources":["/Users/akshatagrawal/Desktop/healthcare/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { ENDPOINTS } from '../config/api';\n\nconst generateSampleVitals = () => {\n  const types = ['Blood Pressure', 'Heart Rate', 'Temperature'];\n  const vitals = [];\n  for (let i = 0; i < 10; i++) {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n    types.forEach(type => {\n      vitals.push({\n        id: Date.now() + Math.random(),\n        date: date.toISOString(),\n        type: type,\n        value: Math.floor(Math.random() * 100).toString()\n      });\n    });\n  }\n  return vitals;\n};\n\nconst api = {\n  sendChatMessage: (message) => axios.post(ENDPOINTS.CHAT, { messages: [{ role: \"user\", content: message }], model: \"Phi-3-mini-4k-instruct\" }),\n  \n  getAppointments: () => {\n    const appointments = JSON.parse(localStorage.getItem('appointments') || '[]');\n    return Promise.resolve({ data: appointments });\n  },\n  \n  createAppointment: (appointmentData) => {\n    const appointments = JSON.parse(localStorage.getItem('appointments') || '[]');\n    const newAppointment = { ...appointmentData, id: Date.now() };\n    appointments.push(newAppointment);\n    localStorage.setItem('appointments', JSON.stringify(appointments));\n    return Promise.resolve({ data: newAppointment });\n  },\n  \n  getVitals: () => {\n    let vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    if (vitals.length === 0) {\n      vitals = generateSampleVitals();\n      localStorage.setItem('vitals', JSON.stringify(vitals));\n    }\n    return Promise.resolve({ data: vitals });\n  },\n  \n  addVital: (vitalData) => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    const newVital = { ...vitalData, id: Date.now(), date: new Date().toISOString() };\n    vitals.push(newVital);\n    localStorage.setItem('vitals', JSON.stringify(vitals));\n    return Promise.resolve({ data: newVital });\n  },\n  \n  deleteVital: (id) => {\n    const vitals = JSON.parse(localStorage.getItem('vitals') || '[]');\n    const updatedVitals = vitals.filter(vital => vital.id !== id);\n    localStorage.setItem('vitals', JSON.stringify(updatedVitals));\n    return Promise.resolve({ data: id });\n  },\n  \n  getHealthTips: () => {\n    // For now, we'll return static tips. In a real app, this would be an API call.\n    return Promise.resolve({\n      data: [\n        \"Stay hydrated! Aim for 8 glasses of water a day.\",\n        \"Take a 5-minute break every hour to stretch and move around.\",\n        \"Incorporate colorful fruits and vegetables into your meals for a nutrient boost.\",\n        \"Practice deep breathing exercises to reduce stress and improve focus.\",\n        \"Aim for 7-9 hours of sleep each night for optimal health.\",\n      ]\n    });\n  },\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}