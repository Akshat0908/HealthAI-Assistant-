{"ast":null,"code":"var _jsxFileName = \"/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/VitalsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { Typography, Button, List, ListItem, ListItemText, Paper, TextField, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Grid, Box, MenuItem } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport { LineChart, Line, BarChart, Bar, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VitalsScreen = () => {\n  _s();\n  const [vitals, setVitals] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [newVital, setNewVital] = useState({\n    type: '',\n    value: ''\n  });\n  const [chartData, setChartData] = useState([]);\n  const [error, setError] = useState('');\n  const vitalTypes = ['Blood Pressure', 'Heart Rate', 'Temperature', 'Weight', 'Sleep Hours'];\n  const prepareChartData = useCallback(() => {\n    const data = {};\n    vitals.forEach(vital => {\n      const date = format(new Date(vital.date), 'MM/dd/yyyy');\n      if (!data[date]) {\n        data[date] = {\n          date\n        };\n      }\n      data[date][vital.type] = parseFloat(vital.value);\n    });\n    setChartData(Object.values(data).sort((a, b) => new Date(a.date) - new Date(b.date)));\n  }, [vitals]);\n  useEffect(() => {\n    fetchVitals();\n  }, []);\n  useEffect(() => {\n    prepareChartData();\n  }, [vitals, prepareChartData]);\n  const fetchVitals = async () => {\n    try {\n      const response = await api.getVitals();\n      setVitals(response.data);\n    } catch (error) {\n      console.error('Error fetching vitals:', error);\n    }\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = e => {\n    setNewVital({\n      ...newVital,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async () => {\n    if (!newVital.type || !newVital.value) {\n      setError('Please fill in both fields');\n      return;\n    }\n    if (isNaN(parseFloat(newVital.value))) {\n      setError('Value must be a number');\n      return;\n    }\n    try {\n      console.log('Submitting vital:', newVital);\n      const response = await api.addVital(newVital);\n      console.log('Vital added:', response.data);\n      setOpen(false);\n      setError('');\n      fetchVitals();\n    } catch (error) {\n      console.error('Error adding vital:', error.response ? error.response.data : error.message);\n      setError('Failed to add vital. Please try again.');\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.deleteVital(id);\n      fetchVitals();\n    } catch (error) {\n      console.error('Error deleting vital:', error);\n    }\n  };\n  const renderChart = type => {\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#0088FE'];\n    switch (type) {\n      case 'Blood Pressure':\n        return /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: type,\n            stroke: colors[0],\n            activeDot: {\n              r: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this);\n      case 'Heart Rate':\n        return /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: chartData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: type,\n            stroke: colors[1],\n            fill: colors[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this);\n      case 'Temperature':\n        return /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: type,\n            stroke: colors[2],\n            activeDot: {\n              r: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this);\n      case 'Weight':\n        return /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: chartData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: type,\n            stroke: colors[3],\n            fill: colors[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this);\n      case 'Sleep Hours':\n        return /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: type,\n            fill: colors[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Vitals Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [vitalTypes.map(type => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            height: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: renderChart(type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            height: '300px',\n            overflow: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Vitals History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleClickOpen,\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 80\n              }, this),\n              children: \"Add Vital\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), vitals.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n            children: vitals.map(vital => /*#__PURE__*/_jsxDEV(ListItem, {\n              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                onClick: () => handleDelete(vital.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${vital.type}: ${vital.value}`,\n                secondary: new Date(vital.date).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)\n            }, vital.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No vitals recorded yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Vital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          margin: \"dense\",\n          name: \"type\",\n          label: \"Vital Type\",\n          fullWidth: true,\n          variant: \"outlined\",\n          onChange: handleChange,\n          value: newVital.type,\n          children: vitalTypes.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option,\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          name: \"value\",\n          label: \"Value\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(VitalsScreen, \"Sk/yqbQSb5P034gz4g+XiNeBZD8=\");\n_c = VitalsScreen;\nexport default VitalsScreen;\nvar _c;\n$RefreshReg$(_c, \"VitalsScreen\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","Typography","Button","List","ListItem","ListItemText","Paper","TextField","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Grid","Box","MenuItem","DeleteIcon","AddIcon","LineChart","Line","BarChart","Bar","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","format","jsxDEV","_jsxDEV","VitalsScreen","_s","vitals","setVitals","open","setOpen","newVital","setNewVital","type","value","chartData","setChartData","error","setError","vitalTypes","prepareChartData","data","forEach","vital","date","Date","parseFloat","Object","values","sort","a","b","fetchVitals","response","getVitals","console","handleClickOpen","handleClose","handleChange","e","target","name","handleSubmit","isNaN","log","addVital","message","handleDelete","id","deleteVital","renderChart","colors","margin","top","right","left","bottom","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","stroke","activeDot","r","fill","sx","flexGrow","p","variant","gutterBottom","container","spacing","map","item","xs","md","elevation","height","width","overflow","display","justifyContent","alignItems","mb","onClick","startIcon","length","secondaryAction","edge","primary","secondary","toLocaleString","onClose","select","label","fullWidth","onChange","option","color","_c","$RefreshReg$"],"sources":["/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/VitalsScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { Typography, Button, List, ListItem, ListItemText, Paper, TextField, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Grid, Box, MenuItem } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport { LineChart, Line, BarChart, Bar, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { format } from 'date-fns';\n\nconst VitalsScreen = () => {\n  const [vitals, setVitals] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [newVital, setNewVital] = useState({ type: '', value: '' });\n  const [chartData, setChartData] = useState([]);\n  const [error, setError] = useState('');\n\n  const vitalTypes = ['Blood Pressure', 'Heart Rate', 'Temperature', 'Weight', 'Sleep Hours'];\n\n  const prepareChartData = useCallback(() => {\n    const data = {};\n    vitals.forEach(vital => {\n      const date = format(new Date(vital.date), 'MM/dd/yyyy');\n      if (!data[date]) {\n        data[date] = { date };\n      }\n      data[date][vital.type] = parseFloat(vital.value);\n    });\n    setChartData(Object.values(data).sort((a, b) => new Date(a.date) - new Date(b.date)));\n  }, [vitals]);\n\n  useEffect(() => {\n    fetchVitals();\n  }, []);\n\n  useEffect(() => {\n    prepareChartData();\n  }, [vitals, prepareChartData]);\n\n  const fetchVitals = async () => {\n    try {\n      const response = await api.getVitals();\n      setVitals(response.data);\n    } catch (error) {\n      console.error('Error fetching vitals:', error);\n    }\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setNewVital({ ...newVital, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async () => {\n    if (!newVital.type || !newVital.value) {\n      setError('Please fill in both fields');\n      return;\n    }\n    if (isNaN(parseFloat(newVital.value))) {\n      setError('Value must be a number');\n      return;\n    }\n    try {\n      console.log('Submitting vital:', newVital);\n      const response = await api.addVital(newVital);\n      console.log('Vital added:', response.data);\n      setOpen(false);\n      setError('');\n      fetchVitals();\n    } catch (error) {\n      console.error('Error adding vital:', error.response ? error.response.data : error.message);\n      setError('Failed to add vital. Please try again.');\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await api.deleteVital(id);\n      fetchVitals();\n    } catch (error) {\n      console.error('Error deleting vital:', error);\n    }\n  };\n\n  const renderChart = (type) => {\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#0088FE'];\n\n    switch(type) {\n      case 'Blood Pressure':\n        return (\n          <LineChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey={type} stroke={colors[0]} activeDot={{ r: 8 }} />\n          </LineChart>\n        );\n      case 'Heart Rate':\n        return (\n          <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Area type=\"monotone\" dataKey={type} stroke={colors[1]} fill={colors[1]} />\n          </AreaChart>\n        );\n      case 'Temperature':\n        return (\n          <LineChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey={type} stroke={colors[2]} activeDot={{ r: 8 }} />\n          </LineChart>\n        );\n      case 'Weight':\n        return (\n          <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Area type=\"monotone\" dataKey={type} stroke={colors[3]} fill={colors[3]} />\n          </AreaChart>\n        );\n      case 'Sleep Hours':\n        return (\n          <BarChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey={type} fill={colors[4]} />\n          </BarChart>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Vitals Tracking\n      </Typography>\n      <Grid container spacing={3}>\n        {vitalTypes.map((type) => (\n          <Grid item xs={12} md={6} key={type}>\n            <Paper elevation={3} sx={{ p: 3, height: '300px' }}>\n              <Typography variant=\"h6\" gutterBottom>{type}</Typography>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                {renderChart(type)}\n              </ResponsiveContainer>\n            </Paper>\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 3, height: '300px', overflow: 'auto' }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Vitals History</Typography>\n              <Button variant=\"contained\" onClick={handleClickOpen} startIcon={<AddIcon />}>\n                Add Vital\n              </Button>\n            </Box>\n            {vitals.length > 0 ? (\n              <List>\n                {vitals.map((vital) => (\n                  <ListItem key={vital.id} secondaryAction={\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete(vital.id)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  }>\n                    <ListItemText\n                      primary={`${vital.type}: ${vital.value}`}\n                      secondary={new Date(vital.date).toLocaleString()}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <Typography>No vitals recorded yet.</Typography>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Add New Vital</DialogTitle>\n        <DialogContent>\n          <TextField\n            select\n            margin=\"dense\"\n            name=\"type\"\n            label=\"Vital Type\"\n            fullWidth\n            variant=\"outlined\"\n            onChange={handleChange}\n            value={newVital.type}\n          >\n            {vitalTypes.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            margin=\"dense\"\n            name=\"value\"\n            label=\"Value\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n          {error && <Typography color=\"error\">{error}</Typography>}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\">Add</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default VitalsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}