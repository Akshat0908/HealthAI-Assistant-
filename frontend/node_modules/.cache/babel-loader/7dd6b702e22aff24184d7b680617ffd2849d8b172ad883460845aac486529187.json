{"ast":null,"code":"var _jsxFileName = \"/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/ChatScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatScreen = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  useEffect(() => {\n    setMessages([{\n      id: 0,\n      text: \"Hello! I'm your HealthAI Assistant. How can I help you today?\",\n      user: false\n    }]);\n  }, []);\n  const sendMessage = async () => {\n    if (inputText.trim() === '') return;\n    const userMessage = {\n      id: messages.length,\n      text: inputText,\n      user: true\n    };\n    setMessages([...messages, userMessage]);\n    setInputText('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message: inputText\n      });\n      const aiResponse = {\n        id: messages.length + 1,\n        text: response.data.response,\n        user: false\n      };\n      setMessages(prevMessages => [...prevMessages, aiResponse]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user ? 'user-message' : 'ai-message'}`,\n        children: message.text\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Type your message...\",\n        onKeyPress: e => e.key === 'Enter' && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatScreen, \"B3eY6J4WkWzPa7yDx3XDfi3BNK0=\");\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatScreen","_s","messages","setMessages","inputText","setInputText","id","text","user","sendMessage","trim","userMessage","length","response","post","message","aiResponse","data","prevMessages","error","console","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/ChatScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ChatScreen = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n\n  useEffect(() => {\n    setMessages([{ id: 0, text: \"Hello! I'm your HealthAI Assistant. How can I help you today?\", user: false }]);\n  }, []);\n\n  const sendMessage = async () => {\n    if (inputText.trim() === '') return;\n\n    const userMessage = { id: messages.length, text: inputText, user: true };\n    setMessages([...messages, userMessage]);\n    setInputText('');\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', { message: inputText });\n      const aiResponse = { id: messages.length + 1, text: response.data.response, user: false };\n      setMessages(prevMessages => [...prevMessages, aiResponse]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div className=\"chat-screen\">\n      <div className=\"message-list\">\n        {messages.map((message) => (\n          <div key={message.id} className={`message ${message.user ? 'user-message' : 'ai-message'}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n          placeholder=\"Type your message...\"\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}