{"ast":null,"code":"var _jsxFileName = \"/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/VitalsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { Typography, Paper, Grid, Box } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { format, subDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VitalsScreen = () => {\n  _s();\n  const [vitals, setVitals] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    fetchVitals();\n  }, []);\n  const fetchVitals = async () => {\n    try {\n      const response = await api.getVitals();\n      setVitals(response.data);\n    } catch (error) {\n      console.error('Error fetching vitals:', error);\n    }\n  };\n  const prepareChartData = useCallback(() => {\n    const today = new Date();\n    const data = Array.from({\n      length: 14\n    }, (_, i) => ({\n      date: format(subDays(today, 13 - i), 'MM/dd')\n    }));\n    vitals.forEach(vital => {\n      const date = format(new Date(vital.date), 'MM/dd');\n      const dataPoint = data.find(d => d.date === date);\n      if (dataPoint) {\n        dataPoint[vital.type] = parseFloat(vital.value);\n      }\n    });\n    setChartData(data);\n  }, [vitals]);\n  useEffect(() => {\n    prepareChartData();\n  }, [vitals, prepareChartData]);\n  const renderLineChart = (dataKey, color) => /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 200,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: dataKey,\n        stroke: color,\n        dot: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Vitals Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Heart Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), renderLineChart('Heart Rate', '#8884d8')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Blood Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), renderLineChart('Blood Pressure', '#82ca9d')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(VitalsScreen, \"8xYvM5TRJVSV+RpqvI6HH6JqoyI=\");\n_c = VitalsScreen;\nexport default VitalsScreen;\nvar _c;\n$RefreshReg$(_c, \"VitalsScreen\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","Typography","Paper","Grid","Box","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","format","subDays","jsxDEV","_jsxDEV","VitalsScreen","_s","vitals","setVitals","chartData","setChartData","fetchVitals","response","getVitals","data","error","console","prepareChartData","today","Date","Array","from","length","_","i","date","forEach","vital","dataPoint","find","d","type","parseFloat","value","renderLineChart","dataKey","color","width","height","children","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","stroke","dot","sx","flexGrow","p","variant","gutterBottom","container","spacing","item","xs","md","elevation","_c","$RefreshReg$"],"sources":["/Users/akshatagrawal/Desktop/healthcare/frontend/src/screens/VitalsScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { Typography, Paper, Grid, Box } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { format, subDays } from 'date-fns';\n\nconst VitalsScreen = () => {\n  const [vitals, setVitals] = useState([]);\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    fetchVitals();\n  }, []);\n\n  const fetchVitals = async () => {\n    try {\n      const response = await api.getVitals();\n      setVitals(response.data);\n    } catch (error) {\n      console.error('Error fetching vitals:', error);\n    }\n  };\n\n  const prepareChartData = useCallback(() => {\n    const today = new Date();\n    const data = Array.from({ length: 14 }, (_, i) => ({\n      date: format(subDays(today, 13 - i), 'MM/dd'),\n    }));\n\n    vitals.forEach(vital => {\n      const date = format(new Date(vital.date), 'MM/dd');\n      const dataPoint = data.find(d => d.date === date);\n      if (dataPoint) {\n        dataPoint[vital.type] = parseFloat(vital.value);\n      }\n    });\n\n    setChartData(data);\n  }, [vitals]);\n\n  useEffect(() => {\n    prepareChartData();\n  }, [vitals, prepareChartData]);\n\n  const renderLineChart = (dataKey, color) => (\n    <ResponsiveContainer width=\"100%\" height={200}>\n      <LineChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey={dataKey} stroke={color} dot={false} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Vitals Tracking\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>Heart Rate</Typography>\n            {renderLineChart('Heart Rate', '#8884d8')}\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>Blood Pressure</Typography>\n            {renderLineChart('Blood Pressure', '#82ca9d')}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default VitalsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}